Bell's law of computer classes formulated by Gordon Bell in 1972 describes how types of computing systems (referred to as computer classes) form, evolve and may eventually die out. New classes of computers create new applications resulting in new markets and new industries.


== Description ==
Bell considers the law to be partially a corollary to Moore's law which states "the number of transistors per chip double every 18 months". Unlike Moore's law, a new computer class is usually based on lower cost components that have fewer transistors or less bits on a magnetic surface, etc. A new class forms about every decade. It also takes up to a decade to understand how the class formed, evolved, and is likely to continue. Once formed, a lower priced class may evolve in performance to take over and disrupt an existing class. This evolution has caused clusters of scalable personal computers with 1 to thousands of computers to span a price and performance range of use from a PC, through mainframes, to become the largest supercomputers of the day. Scalable clusters became a universal class beginning in the mid-1990s; by 2010, clusters of at least one million independent computers will constitute the world's largest cluster.

Definition: Roughly every decade a new, lower priced computer class forms based on a new programming platform, network, and interface resulting in new usage and the establishment of a new industry.
Established market class computers aka platforms are introduced and continue to evolve at roughly a constant price (subject to learning curve cost reduction) with increasing functionality (or performance) based on Moore's law that gives more transistors per chip, more bits per unit area, or increased functionality per system.  Roughly every decade, technology advances in semiconductors, storage, networks, and interfaces enable the emergence of a new, lower-cost computer class (aka "platform") to serve a new need that is enabled by smaller devices (e.g. more transistors per chip, less expensive storage, displays, i/o, network, and unique interface to people or some other information processing sink or source). Each new lower-priced class is then established and maintained as a quasi-independent industry and market.  Such a class is likely to evolve to substitute for an existing class or classes as described above with computer clusters.


== Computer classes that conform to the law ==
mainframes (1960s)
minicomputers (1970s)
personal computers and workstations evolving into a network enabled by Local Area Networking or Ethernet (1980s)
web browser client-server structures enabled by the Internet (1990s)
cloud computing, e.g., Amazon Web Services (2006) or Microsoft Azure (2012)
hand held devices from media players and cell phones to tablets, e.g., Creative, iPods, BlackBerrys, iPhones, smartphones, Kindles, iPads (c. 2000â€“2010)
wireless sensor networks (WSNs) that enable sensor and actuator interconnection, enabling the evolving Internet of things (c. >2005)
Beginning in the 1990s, a single class of scalable computers or mega-servers, (built from clusters of a few to tens of thousands of commodity microcomputer-storage-networked bricks), began to cover and replace mainframes, minis, and workstations to become the largest computers of the day, and when applied for scientific calculation they are commonly called a supercomputer.


== History ==
Bell's law of computer classes and class formation was first mentioned in 1970 with the introduction of the Digital Equipment PDP-11 mini to differentiate it from mainframes and the potentially emerging micros. The law was described in 1972 by Gordon Bell. The emergence and observation of a new, lower-priced microcomputer class based on the microprocessor stimulated the creation of the law that Bell described in articles and Bell's books.


== Other computer industry laws ==
See also the several laws (e.g. Moore's law, Metcalfe's law) that describe the computer industry.


== References ==